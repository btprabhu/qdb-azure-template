{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json# ",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username used when provisioning virtual machines"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password used when provisioning virtual machines"
            }
        },
        "storageAccountNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Storage account name"
            }
        },
        "region": {
            "type": "string",
            "allowedValues": [
                "West US",
                "East US",
                "East Asia",
                "Southeast Asia",
                "West Europe"
            ],
            "metadata": {
                "description": "Location where resources will be provisioned"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "qdbVNet",
            "metadata": {
                "description": "Virtual Network"
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "qdbcluster",
            "metadata": {
                "description": "The name of the QuasarDB cluster"
            }
        },
        "tshirtSize": {
            "type": "string",
            "defaultValue": "Small",
            "allowedValues": [
                "Small",
                "Medium",
                "Large"
            ],
            "metadata": {
                "description": "T-shirt size of the QuasarDB cluster"
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "qdbnode",
            "metadata": {
                "description": "Prefix for VM names on the cluster"
            }
        },
        "qdbPackageDownloadBase": {
            "type": "string",
            "defaultValue": "https://download.quasardb.net/quasardb/",
            "metadata": {
                "description": "QuasarDB package download location"
            }
        },
        "qdbPackage": {
            "type": "string",
            "defaultValue": "2.0/beta4/server/qdb-server_2.0.0-1.deb",
            "metadata": {
                "description": "QuasarDB package to install"
            }
        },
        "jumpbox": {
            "type": "string",
            "defaultValue": "enabled",
            "allowedValues": [
                "enabled",
                "disabled"
            ],
            "metadata": {
                "description": "The flag allowing to enable or disable provisioning of the jumpbox VM that can be used to access the nodes"
            }
        }
    },
    "variables": {
        "commonSettings": {
            "availabilitySet": "qdbClusterAvailabilitySet",
            "region": "[parameters('region')]"
        },
        "networkSettings": {
            "virtualNetworkName": "[parameters('virtualNetworkName')]",
            "addressPrefix": "10.0.0.0/16",
            "subnet": {
                "name": "qdbSubnet",
                "prefix": "10.0.0.0/24"
            },
            "nodesIpPrefix": "10.0.0.1"
        },
        "machineSettings": {
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "machineNamePrefix": "[parameters('vmNamePrefix')]",
            "imageReference": "[variables('imageReference')]",
            "dataDiskSize": 1023
        },
        "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "14.04.3-LTS",
            "version": "latest"
        },
        "templateBaseUrl": "https://raw.githubusercontent.com/tomconte/quasardb-arm-template/master/",
        "sharedBaseUrl": "https://raw.githubusercontent.com/azure/azure-quickstart-templates/master/shared_scripts/ubuntu/",
        "storageAccountSuffixForNodeSmall0": "0",
        "storageAccountSuffixForNodeSmall1": "0",
        "storageAccountSuffixForNodeSmall2": "0",
        "storageAccountSuffixForNodeMedium0": "0",
        "storageAccountSuffixForNodeMedium1": "0",
        "storageAccountSuffixForNodeMedium2": "0",
        "storageAccountSuffixForNodeMedium3": "0",
        "storageAccountSuffixForNodeLarge0": "0",
        "storageAccountSuffixForNodeLarge1": "1",
        "storageAccountSuffixForNodeLarge2": "2",
        "storageAccountSuffixForNodeLarge3": "3",
        "storageAccountSuffixForNodeLarge4": "4",
        "tshirtSizeSmall": {
            "storageAccountCount": 1,
            "clusterSizeMinusOne": 2,
            "lastNodeId": 2,
            "clusterSize": 3,
            "vmSize": "Standard_A2",
            "maxNumberOfDataDisksForVmSizeNotUsedButHereForReference": 4,
            "vmTemplate": "[concat(variables('templateBaseUrl'), 'cluster-nodes-A2.json')]",
            "backendIPConfigurations": [{
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic0'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic1'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic2'),'/ipConfigurations/ipconfig1')]"
            }]
        },
        "tshirtSizeMedium": {
            "storageAccountCount": 1,
            "clusterSizeMinusOne": 3,
            "lastNodeId": 3,
            "clusterSize": 4,
            "vmSize": "Standard_A6",
            "maxNumberOfDataDisksForVmSizeNotUsedButHereForReference": 8,
            "vmTemplate": "[concat(variables('templateBaseUrl'), 'cluster-nodes-A6.json')]",
            "backendIPConfigurations": [{
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic0'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic1'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic2'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic3'),'/ipConfigurations/ipconfig1')]"
            }]
        },
        "tshirtSizeLarge": {
            "storageAccountCount": 5,
            "clusterSizeMinusOne": 4,
            "lastNodeId": 4,
            "clusterSize": 5,
            "vmSize": "Standard_D14",
            "maxNumberOfDataDisksForVmSizeNotUsedButHereForReference": 32,
            "vmTemplate": "[concat(variables('templateBaseUrl'), 'cluster-nodes-D14.json')]",
            "backendIPConfigurations": [{
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic0'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic1'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic2'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic3'),'/ipConfigurations/ipconfig1')]"
            }, {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic4'),'/ipConfigurations/ipconfig1')]"
            }]
        },
        "vmScripts": {
            "scriptsToDownload": [
                "[concat(variables('templateBaseUrl'), 'quasardb-azure-install.sh')]",
                "[concat(parameters('qdbPackageDownloadBase'), parameters('qdbPackage'))]",
                "[concat(variables('sharedBaseUrl'), 'vm-disk-utils-0.1.sh')]"
            ],
            // This command is executed on every node in the cluster except the last one
            "installCommand": "[concat('bash quasardb-azure-install.sh -d ', parameters('qdbPackage'), ' -n ', parameters('clusterName'), ' -i ', concat(variables('networkSettings').nodesIpPrefix, '-', variables('clusterSpec').clusterSize), ' -a ', variables('machineSettings').adminUsername, ' -p ', variables('machineSettings').adminPassword)]",
            // This command is executed on the last node in the cluster, allowing additional setup tasks to be performed
            "setupCommand": "[concat('bash quasardb-azure-install.sh -d ', parameters('qdbPackage'), ' -n ', parameters('clusterName'), ' -i ', concat(variables('networkSettings').nodesIpPrefix, '-', variables('clusterSpec').clusterSize), ' -a ', variables('machineSettings').adminUsername, ' -p ', variables('machineSettings').adminPassword, ' -l')]"
        },
        "clusterSpec": "[variables(concat('tshirtSize', parameters('tshirtSize')))]"
    },
    "resources": [{
        "name": "shared-resources",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[concat(variables('templateBaseUrl'), 'shared-resources.json')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "commonSettings": {
                    "value": "[variables('commonSettings')]"
                },
                "networkSettings": {
                    "value": "[variables('networkSettings')]"
                },
                "storageAccountNamePrefix": {
                    "value": "[parameters('storageAccountNamePrefix')]"
                }
            }
        }
    }, {
        "name": "[concat(parameters('storageAccountNamePrefix'), copyindex())]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2015-05-01-preview",
        "dependsOn": ["[concat('Microsoft.Resources/deployments/', 'shared-resources')]"],
        "location": "[variables('commonSettings').region]",
        "copy": {
            "name": "storageAccountsLoop",
            "count": "[variables('clusterSpec').storageAccountCount]"
        },
        "properties": {
            "accountType": "Standard_LRS"
        }
    }, {
        "name": "[concat('cluster-node', copyindex())]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
            "storageAccountsLoop"
        ],
        "copy": {
            "name": "clusterNodesLoop",
            "count": "[variables('clusterSpec').clusterSizeMinusOne]"
        },
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[variables('clusterSpec').vmTemplate]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "commonSettings": {
                    "value": "[variables('commonSettings')]"
                },
                "networkSettings": {
                    "value": "[variables('networkSettings')]"
                },
                "machineSettings": {
                    "value": "[variables('machineSettings')]"
                },
                "storageAccountName": {
                    "value": "[concat(parameters('storageAccountNamePrefix'), variables(concat('storageAccountSuffixForNode', parameters('tshirtSize'), copyindex())))]"
                },
                "nodeId": {
                    "value": "[copyindex()]"
                },
                "vmSize": {
                    "value": "[variables('clusterSpec').vmSize]"
                },
                "vmScripts": {
                    "value": "[variables('vmScripts')]"
                },
                "commandToExecute": {
                    "value": "[variables('vmScripts').installCommand]"
                }
            }
        }
    }, {
        "name": "last-cluster-node",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
            "clusterNodesLoop"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[variables('clusterSpec').vmTemplate]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "commonSettings": {
                    "value": "[variables('commonSettings')]"
                },
                "networkSettings": {
                    "value": "[variables('networkSettings')]"
                },
                "machineSettings": {
                    "value": "[variables('machineSettings')]"
                },
                "storageAccountName": {
                    "value": "[concat(parameters('storageAccountNamePrefix'), variables(concat('storageAccountSuffixForNode', parameters('tshirtSize'), variables('clusterSpec').lastNodeId)))]"
                },
                "nodeId": {
                    "value": "[variables('clusterSpec').lastNodeId]"
                },
                "vmSize": {
                    "value": "[variables('clusterSpec').vmSize]"
                },
                "vmScripts": {
                    "value": "[variables('vmScripts')]"
                },
                "commandToExecute": {
                    "value": "[variables('vmScripts').setupCommand]"
                }
            }
        }
    }, {
        "name": "jumpbox-resources",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": ["[concat('Microsoft.Resources/deployments/', 'shared-resources')]"],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[concat(variables('templateBaseUrl'), 'jumpbox-resources-', parameters('jumpbox'), '.json')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "commonSettings": {
                    "value": "[variables('commonSettings')]"
                },
                "networkSettings": {
                    "value": "[variables('networkSettings')]"
                },
                "machineSettings": {
                    "value": "[variables('machineSettings')]"
                },
                "storageAccountNamePrefix": {
                    "value": "[parameters('storageAccountNamePrefix')]"
                }
            }
        }
    }]
}
